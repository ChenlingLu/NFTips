<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.nftips.kunpeng.orm.mapper.NftInfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="io.nftips.kunpeng.orm.entity.NftInfoEntity">
        <id column="id" property="id" />
        <result column="gmt_create" property="gmtCreate" />
        <result column="gmt_modify" property="gmtModify" />
        <result column="trading_hash" property="tradingHash" />
        <result column="trading_status" property="tradingStatus" />
        <result column="height" property="height" />
        <result column="energy_value" property="energyValue" />
        <result column="remark" property="remark" />
        <result column="trading_type" property="tradingType" />
        <result column="category_id" property="categoryId" />
        <result column="category_name" property="categoryName" />
        <result column="ntf_id" property="ntfId" />
        <result column="ntf_name" property="ntfName" />
        <result column="sender" property="sender" />
        <result column="recipient" property="recipient" />
        <result column="chain_link" property="chainLink" />
        <result column="chain_data" property="chainData" />
        <result column="chain_link_hash" property="chainLinkHash" />
        <result column="img_hash" property="imgHash" />
        <result column="code" property="code" />
        <result column="data_origin" property="dataOrigin" />
        <result column="events" property="events" />
        <result column="occur_time" property="occurTime" />
    </resultMap>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseStatisticInfoResultMap" type="io.nftips.kunpeng.orm.entity.NFTMintStatisticsEntity">
        <result column="issue_energy_value" property="issueEnergyValue" />
        <result column="category_id" property="categoryId" />
        <result column="category_name" property="categoryName" />
        <result column="sender" property="sender" />
        <result column="chain_link" property="chainLink" />
        <result column="occur_time" property="occurTime" />
        <result column="issue_count" property="issueCount"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        gmt_create,
        gmt_modify,
        id, trading_hash, trading_status, height, energy_value,
        remark, trading_type, category_id, category_name, ntf_id,
        ntf_name, sender, recipient, chain_link, chain_data,
        chain_link_hash, `code`, data_origin, `events`, occur_time
    </sql>
    <select id="statisticsBaseInfo" resultMap="BaseStatisticInfoResultMap">
        WITH nft_count AS (
            -- 统计NFT 实际发行数量
            SELECT bni.category_id,
                   COUNT(*)          AS issue_count,
                   SUM(energy_value) AS issue_energy_value
            FROM bsn_nft_info bni
            WHERE bni.category_id = #{categoryId}
              AND bni.trading_type = "mint_nft"
        ),
        holding_human_count AS (
             SELECT COUNT(*) holding_human
             FROM (
                  SELECT ntf_id, recipient, MAX(occur_time) as occur_time
                  FROM bsn_nft_info
                  WHERE category_id = #{categoryId}
                    AND trading_type IN ("mint_nft", "transfer_nft")
                  GROUP BY ntf_id, recipient
             ) t
             GROUP BY t.recipient
         ),
        nft_base_inf AS (
            SELECT category_id,
                   category_name,
                   sender,
                   chain_link,
                   occur_time
            FROM bsn_nft_info
            WHERE category_id = #{categoryId}
            AND trading_type = "mint_nft"
            ORDER BY occur_time ASC
            LIMIT 1
        )
        SELECT b.category_id,
               b.category_name,
               b.sender,
               b.chain_link,
               b.occur_time,
               c.issue_count,
               c.issue_energy_value,
               COUNT(d.holding_human) holding_human
        FROM nft_base_inf b, nft_count c , holding_human_count d
    </select>
    <select id="statisticsRealTradeCount" resultType="java.lang.Long">
        WITH mint AS (
            SELECT category_id,
                   recipient,
                   COUNT(*) AS mint_count
            FROM bsn_nft_info
            WHERE category_id = #{categoryId}
              AND trading_type = "mint_nft"
            GROUP BY category_id,recipient
        )
        SELECT COUNT(*)
        FROM bsn_nft_info bni
        WHERE bni.category_id = #{categoryId}
            AND bni.sender IN (
                SELECT recipient
                FROM mint
            )
    </select>
    <select id="statisticsProfit" resultType="io.nftips.kunpeng.orm.entity.NftProfitEntity">
        WITH trans AS (
            SELECT COUNT(*) transactions,
                   CONVERT(SUM(bnti.amount), DECIMAL ( 10, 2 )) total_profit,
                   CONVERT(CONVERT(SUM(bnti.amount), DECIMAL ( 10, 2 )) / IFNULL(COUNT(*), 1), DECIMAL ( 10, 2 )) avg_value
            FROM bsn_nft_trading_info bnti
            WHERE bnti.category_id = #{categoryId}
              AND bnti.trading_type = "transfer_nft"
        ),
        account AS (
            SELECT COUNT(*) accounts
            FROM (
                   SELECT DISTINCT sender
                   FROM bsn_nft_trading_info t1
                   WHERE t1.category_id = #{categoryId}
                   UNION
                   SELECT DISTINCT recipient
                   FROM bsn_nft_trading_info t2
                   WHERE t2.category_id = #{categoryId}
             ) t3
         ),
         last_2trade_info AS (
             SELECT c.amount,
                    c.occur_time
             FROM bsn_nft_trading_info c
             WHERE c.category_id =#{categoryId}
             ORDER BY c.occur_time DESC
             LIMIT 2
         ),
         last_trade_info AS (
             SELECT cc.amount,
                    cc.occur_time
             FROM last_2trade_info cc
             ORDER BY cc.occur_time DESC LIMIT 1
         ),
         diff_value AS (
             SELECT
                 CASE (SELECT COUNT(*) FROM last_2trade_info)
                     WHEN 0 THEN 0
                     WHEN 1 THEN CONVERT(lti.amount, DECIMAL ( 10, 2 ))
                     ELSE CONVERT(lti.amount -
                                  (SELECT dd.amount FROM last_2trade_info dd ORDER BY dd.occur_time ASC LIMIT 1),
                         DECIMAL ( 10, 2 ))
                     END AS pre_transfer_value_diff
             FROM last_trade_info lti
         )
    SELECT trans.transactions ,
           trans.total_profit,
           trans.avg_value,
           account.accounts,
           lti.amount last_transfer_value,
           lti.occur_time last_transfer_value,
           dv.pre_transfer_value_diff
    FROM trans, account, last_trade_info lti ,diff_value dv;
    </select>
    <select id="statisticsHoldingPeriod" resultType="io.nftips.kunpeng.orm.entity.HoldingPeriodEntity">

    </select>

</mapper>
